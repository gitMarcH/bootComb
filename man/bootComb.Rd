% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootComb.R
\name{bootComb}
\alias{bootComb}
\title{Combine parameter estimates via bootstrap}
\usage{
bootComb(
  distList,
  combFun,
  N = 1e+06,
  method = "hdi",
  coverage = 0.95,
  doPlot = F
)
}
\arguments{
\item{distList}{A list object where each element of the list is a sampling function for a probability distribution function (i.e. like rnorm, rbeta, ...).}

\item{combFun}{The function to combine the different estimates to a new parameter. Needs to take a single list as input argument, one element of the list for each estimate. This list input argument needs to be a list of same length as distList.}

\item{N}{The number of bootstrap samples to take. Defaults to 1e6.}

\item{method}{The method uses to derive a confidence interval from the empirical distribution of the combined parameter.Needs to be one of 'hdi' (default; computes the highest density interval) or 'quantile (uses quantiles to derive the confidence interval)..}

\item{coverage}{The desired coverage of the resulting confidence interval.Defaults to 0.95.}

\item{doPlot}{Logical; indicates whether a graph should be produced showing the input distributions and the resulting empirical distribution of the combined estimate together with the reported confidence interval. Defaults to FALSE.}
}
\value{
conf.int A vector of length 2 giving the loweer and upper limits of the computed confidence interval.
}
\description{
This package propagates uncertainty from several estimates when combining these estimates via a function.
It does this by using the parametric bootstrap to simulate values from the distribution of each estimate to build up an empirical distribution of the combined parameter.
Finally either the percentile method is used or the highest density interval is chosen to derive a confidence interval for the combined parameter with the desired coverage.
}
\examples{
## Example 1 - product of 2 beta distributions
dist1<-function(n){rbeta(n,shape1=2,shape2=2)}
dist2<-function(n){rbeta(n,shape1=8,shape2=4)}
distListEx<-list(alpha=dist1,beta=dist2)
combFunEx<-function(pars){pars[[1]]*pars[[2]]}
bootComb(distList=distListEx,combFun=combFunEx,doPlot=TRUE)


## Example 2 - sum of 2 Gaussian distributions
dist1<-function(n){rnorm(n,mean=5,sd=3)}
dist2<-function(n){rnorm(n,mean=2,sd=1)}
distListEx<-list(x=dist1,y=dist2)
combFunEx<-function(pars){pars[[1]]+pars[[2]]}
bootComb(distList=distListEx,combFun=combFunEx,doPlot=TRUE)

# Compare with theoretical result:
exactCI<-qnorm(c(0.025,0.975),mean=5+2,sd=sqrt(3^2+1^2))
print(exactCI)
x<-seq(0,14,length=1e3)
y<-dnorm(x,mean=5+2,sd=sqrt(3^2+1^2))
lines(x,y,col="red")
abline(v=exactCI[1],col="red",lty=3)
abline(v=exactCI[2],col="red",lty=3)

}
